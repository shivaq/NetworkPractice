試験の Tips
-------------------------------------------------
・ELB のIPv4 アドレスはいっていじゃないので、DNS ネームで名前解決する必要がある

・Route53 に CName を使った名前解決をリクエストすると、課金される。
Alias レコードを使えば課金されない

・CName は naked ドメインネームには使えない。Alias Record は使える。
・よって、ELB や EC2 の名前解決には、CName は使えず、Alias Record が使える。

・Route53 ルーティングポリシー とユースケースを覚えておく
-------------------------------------------------



Route53 にドメイン登録したら
-------------------------------------------------
Hosted zones
-------------------------------------------------
異なる TLD の NS が表示される
 →冗長化されいている。
-------------------------------------------------



Route53 ルーティングポリシー 各種
-------------------------------------------------
・Simple
デフォルト。リソースが一つのときとかはこれでいい。

・Weighted Routing
// 80% を EC2 １番
// 20% を EC2 2番 に振り分けたりできる。リージョン超えたりもできる。
// A/B テストしたりに使える。どちらのサイトに行ったら、売上がどう変化するかとかを見る。
// 反映まで時間がかかる

Latency
レイテンシーが低い方を優先させる。
// Route53 がユーザーからのクエリ受信
//  →Route53 はユーザーにとって一番低いレイテンシーのレイテンシーリソースレコードを選択
//   →値を返す

Failover
active/passive な構成をしたい時に使える。
// primary サイトを Route53 がヘルスチェックして、
// fail したら セカンダリサイトにスイッチする
//
// プライマリな方の ELB の DNS を、
// Route53 > healthcheck を選択して、
// Monitor an endpoint の Domain name 欄に記入

Geolocation
// ユーザーのジオロケーションによって、アクセス先を振り分ける。
// DNS クエリの発信元によって変えたり。
ユーザーの住んでる地域によって、言語や貨幣単位がその地理に対応しているサイトを表示させたりする。


-------------------------------------------------













▼ TLD トップレベルドメイン // .com, .edu, .gov
-------------------------------------------------
ICANN  が // Internet Corporation for Assigned Names and Numbers
IANA がを使って管理し、 // Internet Assigned Numbers Aughority
DNS ルートゾーンを維持している。
-------------------------------------------------





▼ ドメインレジストラ // Registrar
-------------------------------------------------
gTLD レジストリや ccTLD レジストリに認定された、ドメイン名の割当を管理する組織。
ドメイン登録情報は、ドメインネームレジストリで管理される。

ドメインネームレジストリ →すべてのドメイン名の DB

WhoIS に すべてのドメインネームが登録される。
-------------------------------------------------





▼ Authoritative name server
-------------------------------------------------
// ネームサーバと DNS サーバとは同じと考えていい

DNS キャッシュサーバ等の問い合わせに対して、
自分の管理しているゾーンの DNS の対応表の情報を教えるサーバ
-------------------------------------------------


▼ ゾーンファイル
-------------------------------------------------
Authoritative name server の管理ゾーンが書かれたファイル
-------------------------------------------------






SOA // Start Of Authority
-------------------------------------------------
DNS とそのゾーンの基本プロパティの情報
各ゾーンファイルには一つの SOA がある。

// no-ip.com. ;name →ゾーンの名前
// 565  ;TTL →ゾーンファイルが失効するまでの時間
// IN SOA
// master.example.com. ; MNAME →このゾーンのマスターサーバの名前
// hostmaster.example.com. (;RNAME →このゾーンのアドミンのメアド
//     2017030300 ; serial →ゾーンのシリアルナンバー。この数が増えたら、ゾーンが更新されたとセカンダリが判断
//     3600       ; refresh →ゾーン情報が変更していないか確認
//     1800       ; retry →マスターが返答しなかった時の、SERIAL をリクエストするまでの待機時間
//     604800     ; expire →マスタが返答しない時、セカンダリがゾーン情報のリクエストに答えることをやめるまでの時間
//     600 )      ; min ttl →返答内のリソースレコードをキャッシュする時間

-------------------------------------------------

例
クライアントが、 権威 DNS サーバに
www.foo.bar.com のIPアドレスをリクエストした場合、
ns1.foo.bar.com. が知ってるよ、との返答

-------------------------------------------------
▼ NS レコード // Name サーバレコード
誰が名前解決してくれるのか
// 再帰ネームサーバに、そのゾーンの権威NSの情報を伝える。
// 再帰ネームサーバは、NSレコードから、名前解決のために次は誰に尋ねればいいかの情報を得る
冗長化
// ・複数所持して、DNSサービスを冗長化できる
// ・リストの一番に到達できなければ、二番にアクセスして。。。。
// ・DNS サービスを冗長化するためには、異なるNWセグメント内でホストされる必要がある
foo.bar.com.     IN NS ns1.foo.bar.com.
-------------------------------------------------
▼ A レコード
// どの IP アドレスが、どのドメインに紐づくかを表す。
ns1.foo.bar.com. IN A  10.10.10.10
-------------------------------------------------
▼ MX record // メール exchange レコード
どのメールサーバがメール受信の責任をもっているかが記載されている

ユースケース）
ユーザーがメールを送る時
クライアントから DNS に mX レコードをクエリ
DNS は利用可能な MX レコードのリストを返す。
クライアントは、プライマリメールサーバとの間に SMTP コネクションを生成する
-------------------------------------------------





▼ CName // Canonical Name
-------------------------------------------------
ある ドメインネームを、別のドメインネームに読み替える
http://m.acloud.guru
 →http://mobile.acloud.guru

naked ドメインネームには使えない // www などがない、登録ドメイン名だけのドメインネームのこと。zone apex record とも言う
http://acloud.guru
-------------------------------------------------

▼ Alias Records
AWS のサービス
-------------------------------------------------
下記、IPアドレス が一定ではないリソースのアドレス変化を検知し、マップする
ELB、CloudFront の ディストリビューション、S3 バケツの 静的Webサイト

CName と違い、下記のような naked ドメインネームに使用可能
http://acloud.guru
-------------------------------------------------












▼ ラボ
-------------------------------------------------
EC2 を立てる。ブートストラップとして以下を記載
// #!/bin/bash
// yum update -y
// yum install httpd24 -y
// service httpd start
// chkconfig httpd on
// echo "<html><body><h1>Hello 私が百目です, this is 東京WebServer</h1></body></html>" > /var/www/html/index.html

東京 1号 と 東京 2 号を立てて、index.html の文章もそれぞれ変える


ELB 作成
// MyTokyoELB
// HealthCheck のInterval 10 Healthyしきい値 →３
// あとはデフォルト
// 先程作った 二つの EC2 をチェック対象とする。
//
// EC2 のアドレスと、ELB の DNS ネームとをそれぞれブラウザで叩いて確認
// ELB 経由で表示時に更新すると切り替わるはず。

東京ではなく、アメリカリージョンでEC2 一つ ELB 一つを作成
// ブートストラップもアメリカ用にする

A レコードを作成
// Route53 を開く
// 登録したドメイン名を選択
// Create Record Set を押下
// Alias を YES
// Ailias Record の候補は、空欄タッチで表示される
// ELB を選択
// ELB の IP4アドレスはコロコロ変わる。Alias Record なら、自動検知して名前解決を合わせてくれる

// そのまま作成
//  →A レコードが作成される




-------------------------------------------------
