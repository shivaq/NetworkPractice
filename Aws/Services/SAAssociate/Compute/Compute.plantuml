@startuml
Title <size:30>Compute</size>

actor データセンター
/'
とりあえず、ハードウェアをデータセンターに集めて、その管理を任せられるようにした。
スイッチやルータやらの障害対応などを気にする必要があった
で、Webサーバの構築やDBサーバの構築やらにも時間がかかった
'/

actor EC2
/'Elastic compute cloud 2006 登場
IAAS の誕生
ブラウザのコマンドラインを使って、
 VM のプロビジョニングができるようになった
 AWS は インフラストラクチャ as code な存在となった

 それでもまだ、それらは物理サーバ上の VM です。
 ディスクが壊れたら、データは失われてしまう。
 サーバが壊れたら、OSを再インストールしなければならない
'/


actor Elastic_Beanstalk
/'これの誕生が、IAAS から PAAS の時代への変革の象徴
開発者はコードをアップロードするだけ。
それを動かすインフラ(Webサーバがどうのこうのとか)は気にしなくていい

それでも、Windows や Linux といった OS の管理を気にする必要があった
'/

actor EC2_Container_Service
/'Docker とかのコンテナサービス
軽くて隔離されてる。

それでも、サーバのデプロイは必要。
コンテナが走っているかどうかを気にしなければいけないし、
負荷にも気を使う必要がある
'/



actor Lambda
/'2015 登場
データセンター、HW、インフラ、プロトコル、OS、コンテナ、
アプリケーションレイヤー、AWS API。
全部カプセル化されている。
パッチもスケーリングも気にしなくていい。

コードのことだけ、気にしていればいい。
それを走らせるトリガーだけ気にしていればいい。



例）
トリガー:webServer にユーザーが画像をアップロード
実行：テキストの上の部分に画像を配置
'/
actor Lightsail
/'
VPN:Virtual Private AWS_Global_Network
AWS の中身を全く関知しない人向けのサービス
固定IP アドレス、RDP アクセス(Winrm), SSH(linux)
'/
actor Batch
/'バッチ処理用。'/
@enduml
