Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups: # パラメータグループを使うと、任意の順番で表示できる
      -
        Label:
          default: "Shared Infrastructure Details"
        Parameters:
          - VPCID
          - PUBLICRT
          - PRIVATERTA
          - PRIVATERTB
          - APPBucketURL
      -
        Label:
          default: "App Environment Networking"
        Parameters:
          - APPPublicCIDRA
          - APPPublicCIDRB
          - APPPrivateCIDRA
          - APPPrivateCIDRB
      -
        Label:
          default: "App Environment Configuration"
        Parameters:
          - ENVIRONMENT
          - APPVERSION

    ParameterLabels:
      VPCID:
        default: "VPC to deploy into" # ロジカルID の代わりに、この文字列がラベルになる

# Parameters セクション コンソールの"詳細の指定" で選択
#  →Resources value の !Ref で参照してる

# パラメータの表示順は、アルファベット順になる
Parameters:
  SecurityGroupDescription:
    Description: Security Group Description (Simple parameter)
    Type: String

# List<Number> – An array of integers or floats
# CommaDelimitedList – An array of literal strings that are separated by commas
# AWS::EC2::AvailabilityZone::Name
# AWS::EC2::Instance::Id
# AWS::EC2::Image::Id
# AWS::EC2::SecurityGroup::GroupName
# AWS::EC2::Volume::Id
# AWS::Route53::HostedZone::Id
# List<AWS::EC2::AvailabilityZone::Name>
# List<AWS::EC2::Instance::Id>
# List<AWS::EC2::Image::Id>
# List<AWS::EC2::SecurityGroup::GroupName>
# List<AWS::EC2::Volume::Id>
# List<AWS::Route53::HostedZone::Id>
  VPCID:
    Type: AWS::EC2::VPC::Id # タイプを、AWS サービスで指定
    Description: Shared Infrastructure VPC to use

  SecurityGroupPort:
    Description: Simple Description of a Number Parameter, with MinValue and MaxValue
    Type: Number
    # 下記範囲以外の Number はエラー
    MinValue: 1150
    MaxValue: 65535



  InstanceType:
    Description: WebServer EC2 instance type (has default, AllowedValues)
    Type: String
    # Default 値
    Default: t2.small
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
    ConstraintDescription: must be a valid EC2 instance type.



  DBPwd:
    # パスワードは表示しない
    NoEcho: true
    Description: The database admin account password (won't be echoed)
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances. Linked to AWS Parameter
    # タイプはKeyName。既存の KeyPair が選択肢に表示される
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SecurityGroupIngressCIDR:
    Description: The IP address range that can be used to communicate to the EC2 instances
    Type: String
    # IPアドレス表記の長さを制限
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    # Regex 使ってたら長さ制約いらないのでは？
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.



  MyVPC:
    Description: VPC to operate in
    Type: AWS::EC2::VPC::Id
  MySubnetIDs:
    Description: Subnet IDs that is a List of Subnet Id
    # ArrayList のように表記
    Type: "List<AWS::EC2::Subnet::Id>"
  DbSubnetIpBlocks:
    Description: "Comma-delimited list of three CIDR blocks"
    Type: CommaDelimitedList
    Default: "10.0.48.0/24, 10.0.112.0/24, 10.0.176.0/24"
# -------------------------------------------------
# -------------------------------------------------
# -------------------------------------------------











# Resource セクション
Resources:
  MyEC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      # パラメータを参照
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: "ami-a4c7edb2"
      # リソースを参照
      SubnetId: !Ref DbSubnet1

  MySecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Ref SecurityGroupDescription
      SecurityGroupIngress:
        - CidrIp: !Ref SecurityGroupIngressCIDR
          FromPort: !Ref SecurityGroupPort
          ToPort: !Ref SecurityGroupPort
          IpProtocol: tcp
      VpcId: !Ref MyVPC

  DbSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      # 参照先リストのポジションを指定
      CidrBlock: !Select [0, !Ref DbSubnetIpBlocks]
  DbSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Select [1, !Ref DbSubnetIpBlocks]
  DbSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Select [2, !Ref DbSubnetIpBlocks]
